# upstream settings for php
upstream backend {
        server unix:/var/run/php/php-fpm.sock;        
}
# End of upstream settings for php

# Settings for fastcgi_cache
add_header Fastcgi-Cache $upstream_cache_status;
fastcgi_cache_path /tmp/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
fastcgi_intercept_errors on;
# End of settings for fastcgi_cache

# Security settings
#add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;
add_header X-Xss-Protection "1; mode=block" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
# End of Security settings

server {
    listen 80;
#    root /home/site/wwwroot;
    root /var/www/html;
    index  index.php index.html index.htm;
    server_name _;

    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /html/;
    #}

    # Added settings for wordpress optimization using fastcgi cache. Commented settings are for super cache.

    #set $cache_uri $request_uri;
    set $skip_cache 0;

    # POST requests and URLs with a query string should always go to PHP
    if ($request_method = POST) {
        #set $cache_uri 'null cache';
        set $skip_cache 1;
    }

    if ($query_string != "") {
        #set $cache_uri 'null cache';
        set $skip_cache 1;        
    }   

    # Don't cache URIs containing the following segments
    if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php |sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
        #set $cache_uri 'null cache';
        set $skip_cache 1;        
    }  
	
    # Don't use the cache for logged-in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        #set $cache_uri 'null cache';
        set $skip_cache 1;        
    }

    # Use cached or actual file if it exists, otherwise pass request to WordPress
    location / {
        #try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php;
        try_files $uri $uri/ /index.php?$args;
    }

    location = /favicon.ico {
        log_not_found off; 
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    location ~* .php$ {
        try_files $uri /index.php;
        #Duplicate of fastcgi.conf without SCRIPT_FILENAME
        #include fastcgi_params;
        include fastcgi.conf;
        fastcgi_pass backend;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid  60m;                
    }

    # Setting for fastcgi cache purge. Please install nginx helper plugin to leverage this. 
    # If not setup properly, this will have adverse effects on the site, like serving stale content.
    location ~* /purge(/.*) {
        fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
    }

    # Cache static files for as long as possible
    location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        expires max;
        log_not_found off;
        access_log off;
    }

    # Don't serve hidden files.
    location ~ /\. {
        deny  all; 
        access_log off;
        log_not_found off;
    }

    # Deny access to uploads that arenâ€™t images, videos, music, etc.
    location ~* /(?:uploads|files)/.*.(html|htm|shtml|php|js|swf)$ {
        deny all;
    }

    location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf|css)$ {
     deny all;
     }

    # Hide sensitive files
    location ~* .(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(.php)?|xtmpl)$
    {
        return 444;
    }

    # Restrict access to other scripts
    location ~* .(pl|cgi|py|sh|lua)$ {
        return 444;
    }

    # Limit access to wp-login.php
    location = /wp-login.php {
        limit_req zone=one burst=1 nodelay;
        include fastcgi.conf;
        fastcgi_pass backend;        
    }

    # Restrict access to wp-config file
    location = /wp-config.php {
    deny all;
    }

    # End of settings for wordpress optimization
}